name: MA - Continuous Integration
# run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  # mubashir-compile:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     # - run: cd backend
  #     # go to the directory and run the commandcs
  #     - run: cd backend && npm i
  #     - run: cd backend && npm run build

  mubashir-build:
    runs-on: ubuntu-latest
    steps:
      - name: MA - Cache Node Modules
        id: ma-cache-node-modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          # key: node-modules-cache
          key: node-modules-cache-${{ runner.os }}-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            node-modules-cache-${{ runner.os }}
      
      # Using names, because name steps are more descriptive
      - name: MA - Checkout
        uses: actions/checkout@v1

      - name: MA - Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      
      - name: MA - Install Dependencies
        run: cd backend && npm i

      - name: MA - Build
        run: cd backend && npm run build

      # Having a zip file, I can send directly to elastic beanslack etc...
      - name: MA - Generate Artifact
        run: cd backend/build && zip -r artifact.zip ./ -x '*.git*'

      - name: MA - Store Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ma-backend-artifact
          path: backend/build/artifact.zip


  mubashir-lint:
    # needs making it dependency tree, but you can run in paralell if you want to
    needs: [mubashir-build]
    runs-on: ubuntu-latest
    steps:
      - name: MA - Lint Checkout
        uses: actions/checkout@v1

      - name: MA - Cache Node Modules
        id: ma-cache-node-modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          # key: node-modules-cache
          key: node-modules-cache-${{ runner.os }}-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            node-modules-cache-${{ runner.os }}-
      
      # only install dependency if condition is true, means if cache is not available
      - name: MA - Install Dependencies
        if: steps.ma-cache-node-modules.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: MA - Lint the Code
        run: cd backend && npm run lint

  mubashir-test:
    needs: [mubashir-build]
    runs-on: ubuntu-latest
    steps:
      - name: MA - Test Checkout
        uses: actions/checkout@v1

      # This is Repeating, TODO:: make them reusable actions
      - name: MA - Cache Test Node Modules
        id: ma-cache-node-modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          # key: node-modules-cache
          key: node-modules-cache-${{ runner.os }}-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            node-modules-cache-${{ runner.os }}-

      - name: MA - Install Dependencies for Test
        if: steps.ma-cache-node-modules.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: MA - Run Unit Tests
        run: cd backend && npm t

  mubashir-security-audit:
    needs: [mubashir-build]
    runs-on: ubuntu-latest
    steps:
      - name: MA Security Checkout
        uses: actions/checkout@v1

      - name: MA Check for security issue
        run: cd backend && npm audit --audit-level=medium


# Why keeping Lint, Test etc separately instead of one job
# It is easier to debug and easier to manage
